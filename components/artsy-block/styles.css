@layer artsy-block {

  /* Seed used to pseudo-randomly generate elements */
  @property --base-seed {
    syntax: "*";
    inherits: false;
    initial-value: "1664319900000"; /* 2022/09/28 1h05:00, time of the first artsy-block commit */
  }

  /* Size of the grid cells */
  @property --cell-size {
    syntax: "<number>";
    inherits: false;
    initial-value: 40; /* px */
  }

  /* Percentage of grid cells containing an element */
  @property --frequency {
    syntax: "<number>";
    inherits: false;
    initial-value: 100; /* % */
  }

  /* Hue of the elements */
  @property --base-hue {
    syntax: "<number>";
    inherits: false;
    initial-value: 0; /* deg */
  }

  /* Saturation of the elements */
  @property --base-saturation {
    syntax: "<number>";
    inherits: false;
    initial-value: 100; /* % */
  }

  /* Lightness of the elements */
  @property --base-lightness {
    syntax: "<number>";
    inherits: false;
    initial-value: 50; /* % */
  }

  /* Maximum random hue offset */
  @property --max-hue-spread {
    syntax: "<number>";
    inherits: false;
    initial-value: 180; /* deg */
  }

  /* Maximum random saturation offset */
  @property --max-saturation-spread {
    syntax: "<number>";
    inherits: false;
    initial-value: 0; /* % */
  }

  /* Maximum random lightness offset */
  @property --max-lightness-spread {
    syntax: "<number>";
    inherits: false;
    initial-value: 0; /* % */
  }

  /* Progress of the animation (from 0 to 1) */
  @property --anim-progress {
    syntax: "<number>";
    inherits: false;
    initial-value: 0; /* unitless */
  }

  @keyframes progress {
    0% { --anim-progress: 0; }
    100% { --anim-progress: 1; }
  }

  artsy-block {
    display: block;
    width: 100%;
    height: 100%;
    --cell-size: 40;
    --frequency: 100;
    --base-hue: 260;
    --base-saturation: 100;
    --base-lightness: 50;
    --max-hue-spread: 30;
  }

  @media (prefers-color-scheme: dark) {
    artsy-block {
      --base-lightness: 70;
    }
  }

  /* Maximum element position offset */
  @property --max-offset {
    syntax: "<number>";
    inherits: false;
    initial-value: 0; /* % of --cell-size */
  }

  /* Minimum element scale */
  @property --min-scale {
    syntax: "<number>";
    inherits: false;
    initial-value: 0; /* % of --cell-size */
  }

  /* Maximum element scale */
  @property --max-scale {
    syntax: "<number>";
    inherits: false;
    initial-value: 100; /* % of --cell-size */
  }

  artsy-block[type="diamonds"] {
    background: paint(diamond-cells);
    --max-offset: 50; /* % of cell size */
    --min-scale: 10; /* % of cell size */
    --max-scale: 60; /* % of cell size */
  }

  artsy-block[type="starfield"] {
    background: paint(starfield);
    --max-offset: 50; /* % of cell size */
    --min-scale: 2; /* % of cell size */
    --max-scale: 8; /* % of cell size */
  }

  artsy-block[type="bigdots"] {
    background: paint(big-dot-cells);
    --base-lightness: 60;
    --max-saturation-spread: 40;
    --max-lightness-spread: 15;
  }

  @media (prefers-color-scheme: dark) {
    artsy-block[type="bigdots"] {
      --base-lightness: 30;
    }
  }

  artsy-block[type="labyrinth"] {
    background: paint(labyrinth);
  }

  /* Duration of the fall of a rain drop */
  @property --fall-duration {
    syntax: "<number>";
    inherits: false;
    initial-value: 1500; /* ms */
  }

  /* Duration of the wave after the fall of a rain drop */
  @property --wave-duration {
    syntax: "<number>";
    inherits: false;
    initial-value: 500; /* ms */
  }

  /* --fall-duration + --wave-duration */
  @property --anim-duration {
    syntax: "<time>";
    inherits: false;
    initial-value: 2000ms;
  }

  /* Fraction of the cell size used as the width of an element */
  @property --drop-width-ratio {
    syntax: "<number>";
    inherits: false;
    initial-value: 40; /* fraction of --cell-size */
  }

  /* Fraction of the cell size used as the height of an element */
  @property --drop-height-ratio {
    syntax: "<number>";
    inherits: false;
    initial-value: 40; /* fraction of --cell-size */
  }

  /* Minimum scale of elements in the distance */
  @property --min-depth-scale {
    syntax: "<number>";
    inherits: false;
    initial-value: 50; /* % */
  }

  /* Minimum opacity of elements in the distance */
  @property --min-depth-opacity {
    syntax: "<number>";
    inherits: false;
    initial-value: 50; /* % */
  }

  artsy-block[type="rainfall"] {
    --base-lightness: 20;
    --fall-duration: 1500; /* ms */
    --wave-duration: 500; /* ms */
    --drop-width-ratio: 40; /* fraction of cell size */
    --drop-height-ratio: 2; /* fraction of cell size */
    --min-depth-scale: 50; /* % */
    --min-depth-opacity: 50; /* % */
    --anim-duration: calc(var(--fall-duration) * 1ms + var(--wave-duration) * 1ms);
    background: paint(rainfall);
    animation: progress var(--anim-duration) linear infinite;
  }

  @media (prefers-color-scheme: dark) {
    artsy-block[type="rainfall"] {
      --base-lightness: 80;
    }
  }

}